.data
# Strings using for user inputs and messages
prompt_input: .asciiz "Enter a value for N (>= 25):\n"
error_msg:    .asciiz "Illegal Number! Please try again.\n"
fib_output:   .asciiz "Fibonacci sequence:\n"

.text
main:
    # Print the prompt and validate input
    jal input_loop

    # Once valid input is obtained, calculate the Fibonacci sequence 
    jal fibonacci_start

    # End program
    li $v0, 10   # Exit syscall
    syscall

# Input and validation loop
input_loop:
    # Print user input prompt
    li $v0, 4
    la $a0, prompt_input
    syscall

    # Read integer input
    li $v0, 5
    syscall
    move $t0, $v0  # Store user input in $t0

    # Validate the user number input to see if (N >= 25)
    blt $t0, 25, input_invalid  # If N < 25, then the input is invalid
    j input_valid               # If N>=25 then jump to valid input (j)(like python loop)

input_invalid:
    # Print the error message
    li $v0, 4
    la $a0, error_msg
    syscall

    # Loop back to prompt user again for new entry 
    j input_loop

input_valid:
    # Once input is valid, return to main
    jr $ra

# Fibonacci sequence calculation
fibonacci_start:
    # Print Fibonacci output header
    li $v0, 4
    la $a0, fib_output
    syscall




